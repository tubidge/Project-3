{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Media from './Media';\nimport { bsClass, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nvar propTypes = {\n  /**\n   * Align the media to the top, middle, or bottom of the media object.\n   */\n  align: PropTypes.oneOf(['top', 'middle', 'bottom'])\n};\n\nvar MediaRight = function (_React$Component) {\n  _inherits(MediaRight, _React$Component);\n\n  function MediaRight() {\n    _classCallCheck(this, MediaRight);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  MediaRight.prototype.render = function render() {\n    var _props = this.props,\n        align = _props.align,\n        className = _props.className,\n        props = _objectWithoutProperties(_props, ['align', 'className']);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n\n    if (align) {\n      // The class is e.g. `media-top`, not `media-right-top`.\n      classes[prefix(Media.defaultProps, align)] = true;\n    }\n\n    return React.createElement('div', _extends({}, elementProps, {\n      className: classNames(className, classes)\n    }));\n  };\n\n  return MediaRight;\n}(React.Component);\n\nMediaRight.propTypes = propTypes;\nexport default bsClass('media-right', MediaRight);","map":null,"metadata":{},"sourceType":"module"}