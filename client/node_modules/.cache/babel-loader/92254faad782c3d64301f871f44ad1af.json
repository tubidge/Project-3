{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\schaa\\\\Developer\\\\uubc\\\\homework\\\\auth0loginnew\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\schaa\\\\Developer\\\\uubc\\\\homework\\\\auth0loginnew\\\\client\\\\src\\\\components\\\\Form.js\";\n\nimport React, { useState } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nvar axios = require(\"axios\");\n\nvar Form = function Form(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstName = _useState4[0],\n      setFirstName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var handleCancel = function handleCancel() {\n    _this.setState({\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\"\n    });\n  };\n\n  var handleSumbit = function handleSumbit(e) {\n    e.preventDefault();\n    confirmAlert({\n      title: \"Create your account\",\n      message: \"Is everything right?\",\n      buttons: [{\n        label: \"Yes\",\n        onClick: function onClick() {\n          axios.post(\"/add/user\", {\n            firstName: firstName,\n            lastName: lastName,\n            username: username,\n            email: email\n          }).then(function (result) {\n            if (result) {\n              console.log(result);\n            }\n          });\n        }\n      }, {\n        label: \"No\",\n        onClick: function onClick() {\n          return null;\n        }\n      }]\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: handleSumbit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: username,\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    placeholder: \"username\",\n    type: \"text\",\n    name: \"username\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: firstName,\n    onChange: function onChange(e) {\n      return setFirstName(e.target.value);\n    },\n    placeholder: \"First name\",\n    type: \"text\",\n    name: \"firstName\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: lastName,\n    onChange: function onChange(e) {\n      return setLastName(e.target.value);\n    },\n    placeholder: \"Last name\",\n    type: \"text\",\n    name: \"lastName\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: userEmail,\n    placeholder: \"Email address\",\n    type: \"email\",\n    name: \"email\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-primary m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Save Changes\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:\\Users\\schaa\\Developer\\uubc\\homework\\auth0loginnew\\client\\src\\components\\Form.js"],"names":["React","useState","confirmAlert","axios","require","Form","props","username","setUsername","firstName","setFirstName","lastName","setLastName","handleCancel","setState","handleSumbit","e","preventDefault","title","message","buttons","label","onClick","post","email","then","result","console","log","target","value","userEmail"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst Form = props => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  const handleCancel = () => {\r\n    this.setState({ firstName: \"\", lastName: \"\", username: \"\" });\r\n  };\r\n\r\n  const handleSumbit = e => {\r\n    e.preventDefault();\r\n\r\n    confirmAlert({\r\n      title: \"Create your account\",\r\n      message: \"Is everything right?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => {\r\n            axios\r\n              .post(\"/add/user\", {\r\n                firstName,\r\n                lastName,\r\n                username,\r\n                email\r\n              })\r\n              .then(result => {\r\n                if (result) {\r\n                  console.log(result);\r\n                }\r\n              });\r\n          }\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => null\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSumbit}>\r\n        <input\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n          placeholder=\"username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          required\r\n        />\r\n        <input\r\n          value={firstName}\r\n          onChange={e => setFirstName(e.target.value)}\r\n          placeholder=\"First name\"\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          required\r\n        />\r\n        <input\r\n          value={lastName}\r\n          onChange={e => setLastName(e.target.value)}\r\n          placeholder=\"Last name\"\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          required\r\n        />\r\n        <input\r\n          value={userEmail}\r\n          placeholder=\"Email address\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          disabled\r\n        />\r\n        <button className=\"btn btn-primary m-1\">Save Changes</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}