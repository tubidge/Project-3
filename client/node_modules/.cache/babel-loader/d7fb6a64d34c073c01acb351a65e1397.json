{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from './Button';\nvar propTypes = {\n  /**\n   * The `<input>` `type`\n   * @type {[type]}\n   */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /**\n   * The HTML input name, used to group like checkboxes or radio buttons together\n   * semantically\n   */\n  name: PropTypes.string,\n\n  /**\n   * The checked state of the input, managed by `<ToggleButtonGroup>`` automatically\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The disabled state of both the label and input\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * [onChange description]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the input, and unique identifier in the ToggleButtonGroup\n   */\n  value: PropTypes.any.isRequired\n};\n\nvar ToggleButton = function (_React$Component) {\n  _inherits(ToggleButton, _React$Component);\n\n  function ToggleButton() {\n    _classCallCheck(this, ToggleButton);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  ToggleButton.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        name = _props.name,\n        checked = _props.checked,\n        type = _props.type,\n        onChange = _props.onChange,\n        value = _props.value,\n        props = _objectWithoutProperties(_props, ['children', 'name', 'checked', 'type', 'onChange', 'value']);\n\n    var disabled = props.disabled;\n    return React.createElement(Button, _extends({}, props, {\n      active: !!checked,\n      componentClass: 'label'\n    }), React.createElement('input', {\n      name: name,\n      type: type,\n      autoComplete: 'off',\n      value: value,\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange\n    }), children);\n  };\n\n  return ToggleButton;\n}(React.Component);\n\nToggleButton.propTypes = propTypes;\nexport default ToggleButton;","map":null,"metadata":{},"sourceType":"module"}